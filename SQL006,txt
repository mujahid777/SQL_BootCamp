create database test;

use test;

create table employees
(
    emp_id int,
    emp_name VARCHAR(50),
    mobile BIGINT,
    dept_name VARCHAR(50),
    salary int
); 

insert into employees values(1,'Mujahid', 9867876754, 'Software',1000);
insert into employees values(2,'Raza', 4627876754, 'IT',2000);
insert into employees values(3,'Ayyub', 6353945754, 'HR',5000);
insert into employees values(4,'Amaan', 8967452319, 'IT',3000);

select * from employees;

--- Create views in SQL

create view employee_data_for_finance as select emp_id, emp_name, salary from employees;

select * from employee_data_for_finance;
---Equivalent to--select * from (select emp_id, emp_name, salary from employees); 

--- Create logic for department wise salary SUM
create view department_wise_salary as select  dept_name, sum(salary) from employees group by dept_name;

drop view department_wise_salary;

create view department_wise_salary as select  dept_name, sum(salary) as total_salary from employees group by dept_name;

select * from department_wise_salary;



create table student
(
    stu_id int,
    name VARCHAR(50),
    email VARCHAR(50),
    city VARCHAR(50)
);

insert into student values(1, 'Mujahid','abc@gmail.com','Pilibhit');
insert into student values(2, 'Raza','abc1@gmail.com','Aligarh');
insert into student values(3, 'Amaan','abc2@gmail.com','Noida');
insert into student values(4 , 'Ahmad','abc3@gmail.com','Bareilly');
insert into student values(5, 'Siddiqui','abc4@gmail.com','US Nagar');

 create table student2
(
    stu_id int,
    name VARCHAR(50),
    email VARCHAR(50),
    city VARCHAR(50)
);


insert into student2 values(1, 'Mujahid','abc@gmail.com','Pilibhit');
insert into student2 values(6, 'Ali','abc5@gmil.com','Delhi');
insert into student2 values(8, 'Zeeshu','abc6@gmail.com','Mongli');
insert into student2 values(10 , 'zubair','abc7@gmail.com','Kudarki');
insert into student2 values(5, 'Siddiqui','abc4@gmail.com','US Nagar');


--- We are organising an tournament between college-1 and college-2, we need details of all students from both college

select * from student
UNION
select * from student2; 

--- how to use union all


select * from student
UNION ALL
select * from student2; 

--- Case 1 - Not FAILED 

select stu_id, name from student
UNION 
select name, stu_id from student2; 

--- Case 2 - Not FAILED 

select stu_id, name from student
UNION 
select stu_id, name from student2;

--- Case 3 - Not FAILED 

select stu_id as stu_id_college1, name from student
UNION 
select stu_id as stu_id_college2, name from student2;

--- Case 4 - Not FAILED 

select stu_id from student
UNION 
select email from student2; 


--- Common table Expression

create table amazon_employees
(
    emp_id int,
    emp_name VARCHAR(20),
    dept_id int,
    salary int
);

insert into amazon_employees values(1, 'Mujahid', 100, 10000);

insert into amazon_employees values(2, 'Raza', 100, 20000);

insert into amazon_employees values(3, 'Ahmad', 101, 15000);

insert into amazon_employees values(4, 'Ayyub', 101, 17000);

insert into amazon_employees values(5, 'Ali', 102, 30000);

   create table department
   (
    dept_id int,
    dept_name VARCHAR(20)
   );

   insert into department values(100, 'Software');
   insert into department values(101, 'HR');
   insert into department values(102, 'IT');
   insert into department values(103, 'Finance');

--- Write a query to print the name of department along with the total salary paid in each department

   --- Normal approach
select d.dept_name, tmp.total_salary
from (select dept_id, sum(salary) as total_salary from amazon_employees group by dept_id) tmp
inner join department d on tmp.dept_id = d.dept_id;

--- How to do it using with clause

with dept_wise_salary as (select dept_id, sum(salary) as total_salary from amazon_employees group by dept_id)

select d.dept_name, tmp.total_salary
from (select dept_id, sum(salary) as total_salary from amazon_employees group by dept_id) tmp
inner join department d on tmp.dept_id = d.dept_id;

select * from dept_wise_salary;


--- Write a query to generates numbers from 1 to 10 in SQL

with recursive generate_numbers as 
(
    select 1 as n 
    UNION
    select n+1 from generate_numbers where n<10
)
select * from generate_numbers;



create table emp_mgr
(
    id int,
    name VARCHAR(50),
    manager_id int,
    designation VARCHAR(50),
    primary key(id)
);

insert into emp_mgr values(1,'Raza', null, 'CEO');
insert into emp_mgr values(2,'Ali', 5, 'SDE');
insert into emp_mgr values(3,'Danish', 5, 'DA');
insert into emp_mgr values(4,'Zeeshu', 5, 'DS');
insert into emp_mgr values(5,'Azam', 7, 'Manager');
insert into emp_mgr values(6,'Aamir', 7, 'Architect');
insert into emp_mgr values(7,'Anna', 1, 'CTO');
insert into emp_mgr values(8,'Zubair', 1, 'Manager ');

select * from emp_mgr;

--- For our CTO 'Anna' present her org chart 

with RECURSIVE emp_hir as 
(
    SELECT id, name, manager_id, designation from emp_mgr where name= 'Anna'
    UNION
    select em_id, em.name, em.manager_id, em.designation from emp_hir eh inner join emp_mgr em on eh.id = em.manager_id

)

select * from emp_hir;
