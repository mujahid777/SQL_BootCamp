use test_db;

create table if not exists employee(

    id int,
    name VARCHAR(50),
    age int,
    hiring_date date,
    salary int,
    city VARCHAR(50)
);
insert into employee values(1, 'mujahid',24,'2021-08-12',10000, 'aligarh');
insert into employee values(2, 'raza',27,'2021-08-12',20000, 'pilibhit');
insert into employee values(3, 'ayyub',26,'2021-08-17',11000, 'agra');
insert into employee values(4, 'anna',28,'2021-08-17',12000, 'bareilly');
insert into employee values(1, 'zubair',29,'2021-08-19',17000, 'delhi');

select * from employee;

--- how to perform multi update

set SQL_SAFE_UPDATES = 0;

update employee set age=20, salary=25000 where hiring_date='2021-08-12';
commit;
select * from employee;

---how tp apply auto increment

create table auto_inc_exmp
(
id int auto_increment,
name varchar (20),
primary key (id)

);
insert into auto_inc_exmp(name) values("mujahid");
insert into auto_inc_exmp(name) values("raza");

select * from auto_inc_exmp;


---Use of limit

select * from employee;
select * from employee limit 2;

--- sorting data in Mysql by using 'order by'

select * from employee;

--- arrange data in ascending order
select * from employee order by name;

--- arrange data in descending order
select * from employee order by name desc;

--- display employee data in desc order of salary and if salaries are same for more than one employee
--- arrange their data in asc order of name
select * from employee order by salary desc, name asc;


--- write a query to find employee who is getting maximum salary
select * from employee order by salary desc;

select * from employee order by salary desc limit 1;

--- write a query to find employee who is getting minimum salary
select * from employee order by salary asc limit 1;

--- conditional operators ->    < , > , <= , >=
--- Logical operators AND , OR , NOT

select * from employee;

--- list all employees who are getting salary more than 20000;
select * from employee where salary > 20000;

--- list all employees who are getting salary more than or equal to 20000;
select * from employee where salary >= 20000;

--- list all employees who are getting salary less than 20000;
select * from employee where salary < 20000;

--- list all employees who are getting salary less than or equal to 20000;
select * from employee where salary <= 20000;

--- filter the records where age of employees is equal to 20
select * from employee where age = 20;

--- filter the records where age of employees is not equal to 20
select * from employee where age != 20;
select * from employee where age <> 20;

--- fint the employee who join the company on '2021-08-17' and their salary is less than 11500
select * from employee where hiring_date = '2021-08-17' and salary<11500;

--- fint the employee who join the company after '2021-08-17' or their salary is less than 20000
select * from employee where hiring_date > '2021-08-17' or salary<20000;

select * from employee;

--- how to use Between operation in where clause
--- get all employees date who joined the company between hiring_date '2021-08-15' to '2021-08-20'
select * from employee where hiring_date between '2021-08-15' and '2021-08-20';

--- get all employees date who are getting salary in the range of 10000 to 28000
select * from employee where salary between 10000 and 28000;


--- how to use like operation in where clause
# % -> zero, one or more than one characters
# _ -> only one character

--- get all the employees whose name start with 'A'
select * from employee where name like 'A%';

--- get all the employees whose name start with 'Ay'
select * from employee where name like 'Ay%';

--- get all the employees whose name end with 'd'
select * from employee where name like '%d';

--- get all the employees whose name start with 'M' and end with 'd'
select * from employee where name like 'M%d';

--- get all those employees whose name will exact 4 characters
select * from employee where name like '____';

select * from employee where name like '%____%';

--- How to use Is Null amd Is Not Null in the where clause
insert into employee values(10, 'john',Null,'2021-08-12',10000, 'southhampton');
insert into employee values(11, 'smith',27,'2021-08-12',Null, 'paris');

--- Get all those employees whose age value is null
select * from employee where age Is Null;

select * from employee;

--- Get all those employees whose salary is not null
select * from employee where salary Is not Null;
